{"version":3,"sources":["components/ContextAPI/index.js","components/AppHeader/index.js","components/ProgressBar/index.js","components/Creditor/index.js","components/Debitor/index.js","services/createFolderStructure.js","util/axiosInstance.js","util/utility.js","services/reducers/postFolderReducer.js","services/actionTypes.js","services/reducers/getMacheteReducer.js","services/reducers/getFoldersReducer.js","services/index.js","components/Machete/index.js","components/GenerareDosar/index.js","components/Dosare/index.js","components/Documentatie/index.js","components/AppContent/index.js","App.js","serviceWorker.js","index.js","../external \"electron\""],"names":["GlobalContext","React","createContext","step","persoana_creditor","persoana_debitor","nume_creditor","nume_debitor","domiciliul_creditor","domiciliul_debitor","sediul_creditor","sediul_debitor","judetul_creditor","judetul_debitor","titlu_executoriu","CUI_debitor","CNP_debitor","debit","mijloace_de_executie","nr_folders","updateStep","updateDetails","updateMijloaceDeExecutie","reset","ContextAPI","props","_useState","useState","_useState2","Object","slicedToArray","state","setState","react_default","a","createElement","Provider","value","data","objectSpread","details","concat","toConsumableArray","children","AppHeader","UIShell","aria-label","element","Link","to","prefix","_20_default","user_avatar_20_default","app_switcher_20_default","ProgressBar","useContext","useEffect","document","getElementsByClassName","childNodes","setAttribute","className","ProgressIndicator","currentIndex","description","label","Creditor","globalContext","persoanaFizica","setPersoanaFizica","CreditorTextInput","TextInput","defaultProps","disabled","helperText","id","invalid","invalidText","labelText","light","placeholder","type","Form","onSubmit","event","FormData","target","get","handleSubmit","Select","defaultValue","iconDescription","inline","name","onChange","required","SelectItem","hidden","text","Button","kind","tabIndex","Debitor","DebitorTextInput","onClick","remote","window","require","electronFs","electronPath","PizZip","Docxtemplater","appPath","app","getAppPath","defaultOutputPath","resolve","templatePath","createFolderStructure","structuraDosar","date","outPath","fileTemplatePaths","filter","m","map","k","join","fileTemplates","folders","outputPath","process","nextTick","dosarNR","folderName","existsSync","mkdir","error","console","log","cleanUP","dirPath","removeSelf","undefined","files","readdirSync","e","length","i","filePath","statSync","isFile","unlinkSync","rmdirSync","message","JSON","stringify","recursive","mkdirSync","j","template","readFileSync","zip","doc","loadZip","setData","render","stack","properties","buf","getZip","generate","docName","writeFileSync","axiosInstance","axios","create","baseURL","updateObject","oldObject","updatedProperties","initialState","loading","status","statusText","postFolderReducer","arguments","action","postFolderStart","postFolderSuccess","postFolderFail","getMacheteReducer","getMacheteStart","getMacheteSuccess","getMacheteFail","getFoldersReducer","getFoldersStart","getFoldersSuccess","getFoldersFail","Services","_useReducer","useReducer","_useReducer2","postFolderState","dispatchPostFolder","_useReducer3","_useReducer4","getMacheteState","dispatchGetMachete","_useReducer5","_useReducer6","getFoldersState","dispatchGetFolders","postFolder","useCallback","jsonData","post","headers","Auth","content-type","then","response","catch","getMachete","keys","getFolders","Machete","_services","services","addToast","useToasts","setDosarNR","_useState3","_useState4","checkedItems","_useState5","_useState6","jsonTreeResult","setJsonTreeResult","_useState7","checked","expanded","_useState8","treeStateMachete","setTreeStateMachete","_useState9","_useState10","treeStateResult","setTreeStateResult","n","find","handleMijloaceDeExecutie","dialog","showOpenDialog","appearance","index_browser_default","nodes","onCheck","values","onExpand","icons","check","es","uncheck","halfCheck","expandClose","expandOpen","expandAll","collapseAll","parentClose","parentOpen","leaf","FormGroup","legendText","messageText","Checkbox","indeterminate","GenerareDosar","Fragment","components_ProgressBar","components_Creditor","components_Debitor","components_Machete","Dosare","treeState","setTreeState","Documentatie","AppContent","display","progressBarCurrentIndex","contentSwitch","setContentSwitch","ContentSwitcher","forEach","toggleContentSwitcher","selectedIndex","Switch","components_GenerareDosar","components_Dosare","components_Documentatie","App","react_router_dom","components_ContextAPI","components_AppHeader","dist","autoDismiss","autoDismissTimeout","placement","components_AppContent","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.3fedf7b6.chunk.js","sourcesContent":["/**\r\n * @author: Cosmin Mihai <cosmin.mihai2612@gmail.com>\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nexport const GlobalContext = React.createContext(\r\n{\r\n  step: 0,\r\n  persoana_creditor: \"\",\r\n  persoana_debitor: \"\",\r\n  nume_creditor: \"\",\r\n  nume_debitor: \"\",\r\n  domiciliul_creditor: \"\",\r\n  domiciliul_debitor: \"\",\r\n  sediul_creditor: \"\",\r\n  sediul_debitor: \"\",\r\n  judetul_creditor: \"\",\r\n  judetul_debitor: \"\",\r\n  titlu_executoriu: \"\",\r\n  CUI_debitor: \"\",\r\n  CNP_debitor: \"\",\r\n  debit: \"\",\r\n  mijloace_de_executie: [],\r\n  nr_folders: 0,\r\n  updateStep: () => {},\r\n  updateDetails: () => {},\r\n  updateMijloaceDeExecutie: () => {},\r\n  reset: () => {}\r\n});\r\n\r\nconst ContextAPI = props => {\r\n\r\n  const [state, setState] = useState({\r\n    step: 0,\r\n    persoana_creditor: \"\",\r\n    persoana_debitor: \"\",\r\n    nume_creditor: \"\",\r\n    nume_debitor: \"\",\r\n    domiciliul_creditor: \"\",\r\n    domiciliul_debitor: \"\",\r\n    sediul_creditor: \"\",\r\n    sediul_debitor: \"\",\r\n    judetul_creditor: \"\",\r\n    judetul_debitor: \"\",\r\n    titlu_executoriu: \"\",\r\n    CUI_debitor: \"\",\r\n    CNP_debitor: \"\",\r\n    debit: \"\",\r\n    mijloace_de_executie: [],\r\n    nr_folders: 0\r\n  });\r\n\r\n  const updateStepHandler = (value) => {\r\n    setState({\r\n      ...state,\r\n      step: value\r\n    });\r\n  };\r\n\r\n  const updateDetailsHandler = (details) => {\r\n    setState({\r\n      ...state,\r\n      ...details\r\n    });\r\n  };\r\n\r\n  const updateMijloaceDeExecutieHandler = (value) => {\r\n    setState({\r\n      ...state,\r\n      mijloace_de_executie: [...state.mijloace_de_executie, value]\r\n    });\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    setState({\r\n      ...state,\r\n      ...{\r\n        step: 0,\r\n        persoana_creditor: \"\",\r\n        persoana_debitor: \"\",\r\n        nume_creditor: \"\",\r\n        nume_debitor: \"\",\r\n        domiciliul_creditor: \"\",\r\n        domiciliul_debitor: \"\",\r\n        sediul_creditor: \"\",\r\n        sediul_debitor: \"\",\r\n        judetul_creditor: \"\",\r\n        judetul_debitor: \"\",\r\n        titlu_executoriu: \"\",\r\n        CUI_debitor: \"\",\r\n        CNP_debitor: \"\",\r\n        debit: \"\",\r\n        mijloace_de_executie: []\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        data: state,\r\n        updateStep: updateStepHandler,\r\n        updateDetails: updateDetailsHandler,\r\n        updateMijloaceDeExecutie: updateMijloaceDeExecutieHandler,\r\n        reset: resetHandler\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContextAPI;\r\n","import React from 'react';\r\nimport {\r\n    Header,\r\n    HeaderName,\r\n    HeaderNavigation,\r\n    HeaderMenuItem,\r\n    HeaderGlobalBar,\r\n    HeaderGlobalAction,\r\n    SkipToContent,\r\n} from 'carbon-components-react/lib/components/UIShell';\r\nimport Notification20 from '@carbon/icons-react/lib/notification/20';\r\nimport UserAvatar20 from '@carbon/icons-react/lib/user--avatar/20';\r\nimport AppSwitcher20 from '@carbon/icons-react/lib/app-switcher/20';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AppHeader = () => (\r\n    <Header aria-label=\"Executor App\">\r\n        <SkipToContent />\r\n        <HeaderName element={Link} to=\"/\" prefix=\"Umbral Studios - \">\r\n            Executor App\r\n        </HeaderName>\r\n        <HeaderNavigation aria-label=\"About Us\">\r\n            <HeaderMenuItem element={Link} to=\"/\">\r\n                About Us\r\n            </HeaderMenuItem>\r\n        </HeaderNavigation>\r\n        <HeaderGlobalBar>\r\n            <HeaderGlobalAction aria-label=\"Notifications\">\r\n                <Notification20 />\r\n            </HeaderGlobalAction>\r\n            <HeaderGlobalAction aria-label=\"User Avatar\">\r\n                <UserAvatar20 />\r\n            </HeaderGlobalAction>\r\n            <HeaderGlobalAction aria-label=\"App Switcher\">\r\n                <AppSwitcher20 />\r\n            </HeaderGlobalAction>\r\n        </HeaderGlobalBar>\r\n    </Header>\r\n);\r\n\r\nexport default AppHeader;","import React, { useEffect, useContext } from 'react';\r\nimport {\r\n    ProgressIndicator,\r\n    ProgressStep\r\n} from 'carbon-components-react';\r\nimport './ProgressBar.scss';\r\nimport { GlobalContext } from \"../ContextAPI\";\r\n\r\nconst ProgressBar = () => {\r\n\r\n    const globalContext = useContext(GlobalContext);\r\n    let step = globalContext.data[\"step\"];\r\n\r\n    useEffect(() => {\r\n        document.getElementsByClassName('bx--progress-step-button')[0].childNodes[0].setAttribute(\"viewBox\", \"0 0 16 16\");\r\n        document.getElementsByClassName('bx--progress-step-button')[1].childNodes[0].setAttribute(\"viewBox\", \"0 0 16 16\");\r\n        document.getElementsByClassName('bx--progress-step-button')[2].childNodes[0].setAttribute(\"viewBox\", \"0 0 16 16\");\r\n    });\r\n\r\n    return (\r\n        <div className=\"bx--row progress-indicator\">\r\n            <ProgressIndicator\r\n                currentIndex={step}\r\n            >\r\n                <ProgressStep\r\n                    description=\"Creditor\"\r\n                    label=\"Creditor\"\r\n                />\r\n                <ProgressStep\r\n                    description=\"Debitor\"\r\n                    label=\"Debitor\"\r\n                />\r\n                <ProgressStep\r\n                    description=\"Machete\"\r\n                    label=\"Machete\"\r\n                />\r\n            </ProgressIndicator>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useState, useContext } from 'react';\r\nimport './Creditor.scss';\r\nimport {\r\n    Form,\r\n    Select,\r\n    SelectItem,\r\n    TextInput,\r\n    Button\r\n} from 'carbon-components-react';\r\nimport { GlobalContext } from \"../ContextAPI\";\r\n\r\nconst Creditor = () => {\r\n\r\n    const globalContext = useContext(GlobalContext);\r\n\r\n    const [persoanaFizica, setPersoanaFizica] = useState(true);\r\n\r\n    const CreditorTextInput = props => {\r\n        return (\r\n            <TextInput {...props} />\r\n        );\r\n    };\r\n\r\n    CreditorTextInput.defaultProps = {\r\n        className: \"className\",\r\n        disabled: false,\r\n        helperText: \"\",\r\n        id: \"id\",\r\n        invalid: false,\r\n        invalidText: \"\",\r\n        labelText: \"labelText\",\r\n        light: false,\r\n        placeholder: \"Placeholder text\",\r\n        type: \"text\"\r\n    };\r\n\r\n    const toggleCreditorHandler = () => {\r\n        setPersoanaFizica(!persoanaFizica);\r\n    };\r\n\r\n    // const handleCreditorTextInputChange = (event) => {\r\n    //     if (persoanaFizica) {\r\n    //         globalContext.updateDetails({\r\n    //             persoana_creditor: event.nativeEvent.data\r\n    //\r\n    //         });\r\n    //     } else if (!persoanaFizica) {\r\n    //         globalContext.updateDetails({\r\n    //             persoana_creditor: event.nativeEvent.data\r\n    //         });\r\n    //     }\r\n    // };\r\n\r\n    const handleSubmit = (event) => {\r\n        const data = new FormData(event.target);\r\n        if (data.get('select1') === \"Fizica\") {\r\n            globalContext.updateDetails({\r\n                step: 1,\r\n                persoana_creditor: data.get('select1'),\r\n                nume_creditor: data.get('textinput1'),\r\n                domiciliul_creditor: data.get('textinput2'),\r\n                judetul_creditor: data.get('textinput3'),\r\n                titlu_executoriu: data.get('textinput4'),\r\n                debit: data.get('textinput5'),\r\n            });\r\n        } else if (data.get('select1') === \"Juridica\") {\r\n            globalContext.updateDetails({\r\n                step: 1,\r\n                persoana_creditor: data.get('select1'),\r\n                nume_creditor: data.get('textinput1'),\r\n                sediul_creditor: data.get('textinput2'),\r\n                judetul_creditor: data.get('textinput3'),\r\n                titlu_executoriu: data.get('textinput4'),\r\n                debit: data.get('textinput5'),\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bx--row\">\r\n            <Form\r\n                className=\"bx-col-lg-16 bx--col-sm-4 creditor-form\"\r\n                onSubmit={(event) => handleSubmit(event)}\r\n            >\r\n                <div className=\"bx--row\">\r\n                    <div className=\"bx--col-lg-2 bx--col-sm-2\">\r\n                        <Select\r\n                            className=\"generare-dosar-form-1\"\r\n                            defaultValue={globalContext.data.persoana_creditor}\r\n                            disabled={false}\r\n                            helperText=\"\"\r\n                            iconDescription=\"open list of options\"\r\n                            id=\"select1\"\r\n                            inline={false}\r\n                            invalid={false}\r\n                            invalidText=\"\"\r\n                            labelText=\"Persoana:\"\r\n                            light={false}\r\n                            name=\"select1\"\r\n                            onChange={toggleCreditorHandler}\r\n                            required\r\n                        >\r\n                            <SelectItem\r\n                                disabled={false}\r\n                                hidden={false}\r\n                                text=\"Fizica\"\r\n                                value=\"Fizica\"\r\n                            />\r\n                            <SelectItem\r\n                                disabled={false}\r\n                                hidden={false}\r\n                                text=\"Juridica\"\r\n                                value=\"Juridica\"\r\n                            />\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"bx--col-lg-4 bx--col-sm-4\">\r\n                        {persoanaFizica ?\r\n                            <CreditorTextInput\r\n                                className=\"generare-dosar-form-2\"\r\n                                defaultValue={globalContext.data.nume_creditor}\r\n                                id=\"textinput1\"\r\n                                labelText=\"Nume/Prenume:\"\r\n                                name=\"textinput1\"\r\n                                // onChange={(event) => handleCreditorTextInputChange(event)}\r\n                                placeholder=\"Ex: Andreca Niculache\"\r\n                                required\r\n                            />\r\n                            : <CreditorTextInput\r\n                                className=\"generare-dosar-form-2\"\r\n                                defaultValue={globalContext.data.nume_creditor}\r\n                                id=\"textinput1\"\r\n                                labelText=\"Denumire Societate:\"\r\n                                name=\"textinput1\"\r\n                                // onChange={(event) => handleCreditorTextInputChange(event)}\r\n                                placeholder=\"Ex: S.C. POLARISAN M HOLDING S.R.L.\"\r\n                                required\r\n                            />}\r\n                    </div>\r\n                    <div className=\"bx--col-lg-6 bx--col-sm-4\">\r\n                        {persoanaFizica ?\r\n                            <CreditorTextInput\r\n                                className=\"generare-dosar-form-3\"\r\n                                defaultValue={globalContext.data.domiciliul_creditor}\r\n                                id=\"textinput2\"\r\n                                labelText=\"cu domiciliul in:\"\r\n                                name=\"textinput2\"\r\n                                placeholder=\"Ex: com. Gruia, sat Izvoarele\"\r\n                                required\r\n                            />\r\n                            : <CreditorTextInput\r\n                                className=\"generare-dosar-form-3\"\r\n                                defaultValue={globalContext.data.sediul_creditor}\r\n                                id=\"textinput2\"\r\n                                labelText=\"cu sediul:\"\r\n                                name=\"textinput2\"\r\n                                placeholder=\"Ex: Alexandria, str. Libertatii, nr.230A, et. 2\"\r\n                                required\r\n                            />}\r\n                    </div>\r\n                    <div className=\"bx--col-lg-4 bx--col-sm-2\">\r\n                        <CreditorTextInput\r\n                            className=\"generare-dosar-form-4\"\r\n                            defaultValue={globalContext.data.judetul_creditor}\r\n                            id=\"textinput3\"\r\n                            labelText=\"judetul:\"\r\n                            name=\"textinput3\"\r\n                            placeholder=\"Ex: Teleorman\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"bx--row\">\r\n                    <div className=\"bx--col-lg-8 bx--col-sm-4\">\r\n                        <CreditorTextInput\r\n                            className=\"generare-dosar-form-5\"\r\n                            defaultValue={globalContext.data.titlu_executoriu}\r\n                            id=\"textinput4\"\r\n                            labelText=\"Titlu Executoriu:\"\r\n                            name=\"textinput4\"\r\n                            placeholder=\"Ex: Sentinta Civila nr. 321/01.09.2018, pronuntata de Judecatoria Zimnicea\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"bx--col-lg-8 bx--col-sm-4\">\r\n                        <CreditorTextInput\r\n                            className=\"generare-dosar-form-5\"\r\n                            defaultValue={globalContext.data.debit}\r\n                            id=\"textinput5\"\r\n                            labelText=\"Debit:\"\r\n                            name=\"textinput5\"\r\n                            placeholder=\"Ex: 12345\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"bx--row submit-row-creditor\">\r\n                    <div className=\"bx--col-lg-16 bx--col-sm-4\">\r\n                        <Button\r\n                            className=\"generare-dosar-form-6\"\r\n                            disabled={false}\r\n                            kind=\"primary\"\r\n                            tabIndex={0}\r\n                            type=\"submit\"\r\n                        >\r\n                            Pasul Urmator\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Creditor;\r\n","import React, { useState, useContext } from 'react';\r\nimport './Debitor.scss';\r\nimport {\r\n    Form,\r\n    Select,\r\n    SelectItem,\r\n    TextInput,\r\n    Button\r\n} from 'carbon-components-react';\r\nimport { GlobalContext } from \"../ContextAPI\";\r\n\r\nconst Debitor = () => {\r\n\r\n    const globalContext = useContext(GlobalContext);\r\n\r\n    const [persoanaFizica, setPersoanaFizica] = useState(true);\r\n\r\n    const DebitorTextInput = props => {\r\n        return (\r\n            <TextInput {...props} />\r\n        );\r\n    };\r\n\r\n    DebitorTextInput.defaultProps = {\r\n        className: \"className\",\r\n        disabled: false,\r\n        helperText: \"\",\r\n        id: \"id\",\r\n        invalid: false,\r\n        invalidText: \"Completarea campului este necesara pentru a trece mai departe.\",\r\n        labelText: \"labelText\",\r\n        light: false,\r\n        placeholder: \"Placeholder text\",\r\n        type: \"text\"\r\n    };\r\n\r\n    const toggleDebitorHandler = () => {\r\n        setPersoanaFizica(!persoanaFizica);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        const data = new FormData(event.target);\r\n        if (data.get('select1') === \"Fizica\") {\r\n            globalContext.updateDetails({\r\n                step: 2,\r\n                persoana_debitor: data.get('select1'),\r\n                nume_debitor: data.get('textinput1'),\r\n                CNP_debitor: data.get('textinput2'),\r\n                domiciliul_debitor: data.get('textinput3'),\r\n                judetul_debitor: data.get('textinput4'),\r\n                titlu_executoriu: data.get('textinput5'),\r\n            });\r\n        } else if (data.get('select1') === \"Juridica\") {\r\n            globalContext.updateDetails({\r\n                step: 2,\r\n                persoana_debitor: data.get('select1'),\r\n                nume_debitor: data.get('textinput1'),\r\n                CUI_debitor: data.get('textinput2'),\r\n                sediul_debitor: data.get('textinput3'),\r\n                judetul_debitor: data.get('textinput4'),\r\n                titlu_executoriu: data.get('textinput5'),\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleBackBtn = () => {\r\n        globalContext.updateDetails({\r\n            step: 0\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"bx--row\">\r\n            <Form\r\n            className=\"bx-col-lg-16 bx--col-sm-4 debitor-form\"\r\n            onSubmit={(event) => handleSubmit(event)}\r\n        >\r\n            <div className=\"bx--row\">\r\n                <div className=\"bx--col-lg-2 bx--col-sm-4\">\r\n                    <Select\r\n                        className=\"generare-dosar-form-1\"\r\n                        defaultValue={globalContext.data.persoana_debitor}\r\n                        disabled={false}\r\n                        helperText=\"\"\r\n                        iconDescription=\"open list of options\"\r\n                        id=\"select-1\"\r\n                        inline={false}\r\n                        invalid={false}\r\n                        invalidText=\"\"\r\n                        labelText=\"Persoana:\"\r\n                        light={false}\r\n                        name=\"select1\"\r\n                        onChange={toggleDebitorHandler}\r\n                        required\r\n                    >\r\n                        <SelectItem\r\n                            disabled={false}\r\n                            hidden={false}\r\n                            text=\"Fizica\"\r\n                            value=\"Fizica\"\r\n                        />\r\n                        <SelectItem\r\n                            disabled={false}\r\n                            hidden={false}\r\n                            text=\"Juridica\"\r\n                            value=\"Juridica\"\r\n                        />\r\n                    </Select>\r\n                </div>\r\n                <div className=\"bx--col-lg-4 bx--col-sm-2\">\r\n                    {persoanaFizica ?\r\n                        <DebitorTextInput\r\n                            className=\"generare-dosar-form-2\"\r\n                            defaultValue={globalContext.data.nume_debitor}\r\n                            id=\"textinput1\"\r\n                            labelText=\"Nume/Prenume:\"\r\n                            name=\"textinput1\"\r\n                            placeholder=\"Ex: Andrei Neculce\"\r\n                            required\r\n                        />\r\n                        : <DebitorTextInput\r\n                            className=\"generare-dosar-form-2\"\r\n                            defaultValue={globalContext.data.nume_debitor}\r\n                            id=\"textinput1\"\r\n                            labelText=\"Denumire Societate:\"\r\n                            name=\"textinput1\"\r\n                            placeholder=\"Ex: S.C. POLARIS M HOLDING S.R.L.\"\r\n                            required\r\n                        />}\r\n                </div>\r\n                <div className=\"bx--col-lg-2 bx--col-sm-2\">\r\n                    {persoanaFizica ?\r\n                        <DebitorTextInput\r\n                            className=\"generare-dosar-form-3\"\r\n                            defaultValue={globalContext.data.CNP_debitor}\r\n                            id=\"textinput2\"\r\n                            labelText=\"CNP:\"\r\n                            name=\"textinput2\"\r\n                            placeholder=\"Ex: 1871123474321\"\r\n                            required\r\n                        />\r\n                        : <DebitorTextInput\r\n                            className=\"generare-dosar-form-3\"\r\n                            defaultValue={globalContext.data.CUI_debitor}\r\n                            id=\"textinput2\"\r\n                            labelText=\"CUI:\"\r\n                            name=\"textinput2\"\r\n                            placeholder=\"Ex: 6859662\"\r\n                            required\r\n                        />}\r\n                </div>\r\n                <div className=\"bx--col-lg-6 bx--col-sm-4\">\r\n                    {persoanaFizica ?\r\n                        <DebitorTextInput\r\n                            className=\"generare-dosar-form-4\"\r\n                            defaultValue={globalContext.data.domiciliul_debitor}\r\n                            id=\"textinput3\"\r\n                            labelText=\"cu domiciliul in:\"\r\n                            name=\"textinput3\"\r\n                            placeholder=\"Ex: com. Gruia, sat Izvoarele\"\r\n                            required\r\n                        />\r\n                        : <DebitorTextInput\r\n                            className=\"generare-dosar-form-4\"\r\n                            defaultValue={globalContext.data.sediul_debitor}\r\n                            id=\"textinput3\"\r\n                            labelText=\"cu sediul procesual ales in:\"\r\n                            name=\"textinput3\"\r\n                            placeholder=\"Ex: Alexandria, str. Libertatii, nr.244A, et. 1\"\r\n                            required\r\n                        />}\r\n                </div>\r\n                <div className=\"bx--col-lg-2 bx--col-sm-2\">\r\n                    <DebitorTextInput\r\n                        className=\"generare-dosar-form-5\"\r\n                        defaultValue={globalContext.data.judetul_debitor}\r\n                        id=\"textinput4\"\r\n                        labelText=\"judetul:\"\r\n                        name=\"textinput4\"\r\n                        placeholder=\"Ex: Teleorman\"\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"bx--row\">\r\n                <div className=\"bx--col-lg-8 bx--col-sm-4\">\r\n                    <DebitorTextInput\r\n                        className=\"generare-dosar-form-6\"\r\n                        defaultValue={globalContext.data.titlu_executoriu}\r\n                        id=\"textinput5\"\r\n                        labelText=\"Titlu Executoriu:\"\r\n                        name=\"textinput5\"\r\n                        placeholder=\"Ex: Sentinta Civila nr. 421/01.09.2018, pronuntata de Judecatoria Zimnicea\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"bx--col-lg-8 bx--col-sm-4\">\r\n                    <DebitorTextInput\r\n                        className=\"generare-dosar-form-5\"\r\n                        defaultValue={globalContext.data.debit}\r\n                        id=\"textinput6\"\r\n                        labelText=\"Debit:\"\r\n                        name=\"textinput6\"\r\n                        placeholder=\"Ex: 12345\"\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"bx--row submit-row-debitor\">\r\n                <div className=\"bx--col-lg-8 bx--col-sm-2\">\r\n                    <Button\r\n                        className=\"generare-dosar-form-7\"\r\n                        disabled={false}\r\n                        kind=\"primary\"\r\n                        onClick={handleBackBtn}\r\n                        tabIndex={0}\r\n                        type=\"submit\"\r\n                    >\r\n                        Pasul Precedent\r\n                    </Button>\r\n                </div>\r\n                <div className=\"bx--col-lg-8 bx--col-sm-2\">\r\n                    <Button\r\n                        className=\"generare-dosar-form-8\"\r\n                        disabled={false}\r\n                        kind=\"primary\"\r\n                        tabIndex={0}\r\n                        type=\"submit\"\r\n                    >\r\n                        Pasul Urmator\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Debitor;\r\n","var remote = window.require('electron').remote;\r\nvar electronFs = remote.require('fs');\r\nvar electronPath = remote.require('path');\r\nconst PizZip = require('pizzip');\r\nconst Docxtemplater = require('docxtemplater');\r\n\r\nconst appPath = require('electron').remote.app.getAppPath();\r\nconst defaultOutputPath = electronPath.resolve( appPath + '//output//');\r\nconst templatePath = electronPath.resolve( appPath + '//src//assets//templates//');\r\n\r\nconst cleanUP = (dirPath, removeSelf) => {\r\n    try {\r\n        if (electronFs.existsSync(dirPath)){\r\n            if (removeSelf === undefined)\r\n                removeSelf = true;\r\n            try {\r\n                var files = electronFs.readdirSync(dirPath);\r\n            } catch(e) {\r\n                return;\r\n            }\r\n            if (files.length > 0)\r\n                for (let i = 0; i < files.length; i++) {\r\n                    const filePath = electronPath.join(dirPath, files[i]);\r\n                    if (electronFs.statSync(filePath).isFile())\r\n                        electronFs.unlinkSync(filePath);\r\n                    else\r\n                        cleanUP(filePath);\r\n                }\r\n            if (removeSelf)\r\n                electronFs.rmdirSync(dirPath);\r\n\r\n        }\r\n    }\r\n    catch (error) {\r\n        let e = {\r\n            message: error.message,\r\n            name: error.name\r\n        };\r\n        console.log(JSON.stringify({error: e}));\r\n        throw error;\r\n    }\r\n};\r\n\r\nconst createFolderStructure = (structuraDosar, date, outPath) => {\r\n    const fileTemplatePaths = structuraDosar[0].children.filter(m => m.type==='file').map(k =>{ return electronPath.join(templatePath, k.label + '.docx')});\r\n    const fileTemplates = structuraDosar[0].children.filter(m => m.type==='file').map(k=>{return electronPath.join(k.label + '.docx') });\r\n    const folders = structuraDosar[0].children.filter(m => m.type==='folder').map(k=>{return k.label });\r\n    let outputPath = defaultOutputPath;\r\n    if (outPath !== 'defaultPath'){\r\n        outputPath = outPath\r\n    };\r\n\r\n    //setImmediate(() => {\r\n    //    cleanUP(outputPath, false);\r\n    //});\r\n\r\n    process.nextTick(() => {\r\n\r\n        const dosarNR = date.nr_folders+1;\r\n        const folderName = `Ds. ${dosarNR} din 2019 (${date.nume_creditor} vs ${date.nume_debitor})`;\r\n\r\n        // if output folder does not exist we create it\r\n        if (!electronFs.existsSync(outputPath)) {\r\n            try {\r\n                electronFs.mkdir(\r\n                    outputPath,\r\n                    (error) => {\r\n                        if (error) throw error;\r\n                    });\r\n            } catch (error) {\r\n                console.log(`Error when executing mkdir on the main folder: ${error}`);\r\n                return\r\n            };\r\n        };\r\n\r\n         // if the folder we want to create already exists we delete it first then recreate it.electronPath\r\n         if (electronFs.existsSync(electronPath.resolve( outputPath + '//' + folderName))) {\r\n            cleanUP(electronPath.resolve( outputPath + '//' + folderName), true);\r\n         };\r\n\r\n        try {\r\n            electronFs.mkdir(\r\n                electronPath.join(outputPath, folderName),\r\n                { recursive: false },\r\n                () => {\r\n\r\n                for (let i=0; i<=folders.length-1; i++) {\r\n                    try {\r\n                        electronFs.mkdirSync(electronPath.join(outputPath, folderName, folders[i]));\r\n                    } catch (error) {\r\n                        console.log(`Error when executing mkdirSync in a loop on 'folders' array: ${error}`);\r\n                    }\r\n                }\r\n\r\n                for (let j=0; j<=fileTemplatePaths.length-1; j++) {\r\n\r\n                    let template = null;\r\n                    try {\r\n                        if (electronFs.existsSync(fileTemplatePaths[j])) {\r\n                            try {\r\n                                template = electronFs\r\n                                    .readFileSync(fileTemplatePaths[j], 'binary');\r\n\r\n                                let zip = new PizZip(template);\r\n                                let doc = new Docxtemplater();\r\n                                doc.loadZip(zip);\r\n                                doc.setData({\r\n                                    nume_creditor: date.nume_creditor,\r\n                                    nume_debitor: date.nume_debitor,\r\n                                    titlu_executoriu: date.titlu_executoriu\r\n                                });\r\n\r\n                                try {\r\n                                    doc.render()\r\n                                }\r\n                                catch (error) {\r\n                                    let e = {\r\n                                        message: error.message,\r\n                                        name: error.name,\r\n                                        stack: error.stack,\r\n                                        properties: error.properties,\r\n                                    };\r\n                                    console.log(JSON.stringify({error: e}));\r\n                                    throw error;\r\n                                }\r\n\r\n                                let buf = doc\r\n                                    .getZip()\r\n                                    .generate({type: 'nodebuffer'});\r\n                                // buf is a nodejs buffer, you can either write it to a file or do anything else with it.\r\n                                const docName = fileTemplates[j];\r\n\r\n                                try {\r\n                                    electronFs.writeFileSync( electronPath.join(outputPath, folderName, docName), buf);\r\n                                } catch (error) {\r\n                                    console.log(`Error when executing writeFileSync in a loop on ${electronPath.join(outputPath, folderName, docName)[j]}: ${error}`);\r\n                                };\r\n\r\n                            } catch (error) {\r\n                                console.log(`Error when executing readFileSync in a loop on ${fileTemplatePaths[j]}: ${error}`);\r\n                            };\r\n                        }\r\n                    } catch(error) {\r\n                         console.log(`Error when executing existsSync in a loop on ${fileTemplatePaths[j]}: ${error}`);\r\n                    };\r\n\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(`Error when executing mkdir on the main folder: ${error}`);\r\n        }\r\n\r\n    });\r\n\r\n};\r\n\r\nexport default createFolderStructure;","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://docgen-electron.firebaseio.com/'\r\n});\r\n\r\nexport default axiosInstance;","/**\r\n * Copyright 2019, IntraLinks, Inc, All rights reserved.\r\n * @author: Cosmin Mihai <cmihai@intralinks.com>\r\n */\r\n\r\nexport const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties\r\n  };\r\n};\r\n","import * as actionTypes from '../actionTypes';\r\nimport { updateObject } from '../../util/utility';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: '',\r\n    status: '',\r\n    statusText: '',\r\n    id: ''\r\n};\r\n\r\nconst postFolderStart = ( state ) => {\r\n    return updateObject( state, {\r\n        loading: true\r\n    } );\r\n};\r\n\r\nconst postFolderSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        loading: false,\r\n        status: action.status,\r\n        statusText: action.statusText,\r\n        id: action.id\r\n    } );\r\n};\r\n\r\nconst postFolderFail = ( state, action ) => {\r\n    return updateObject( state, {\r\n        loading: false,\r\n        error: action.error\r\n    } );\r\n};\r\n\r\nconst postFolderReducer = (state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.POST_FOLDER_START: return postFolderStart( state );\r\n        case actionTypes.POST_FOLDER_SUCCESS: return postFolderSuccess( state, action );\r\n        case actionTypes.POST_FOLDER_FAIL: return postFolderFail( state, action );\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default postFolderReducer;\r\n","export const POST_FOLDER_START = 'POST_FOLDER_START';\r\nexport const POST_FOLDER_SUCCESS = 'POST_FOLDER_SUCCESS';\r\nexport const POST_FOLDER_FAIL = 'POST_FOLDER_FAIL';\r\n\r\nexport const GET_MACHETE_START = 'GET_MACHETE_START';\r\nexport const GET_MACHETE_SUCCESS = 'GET_MACHETE_SUCCESS';\r\nexport const GET_MACHETE_FAIL = 'GET_MACHETE_FAIL';\r\n\r\nexport const GET_FOLDERS_START = 'GET_FOLDERS_START';\r\nexport const GET_FOLDERS_SUCCESS = 'GET_FOLDERS_SUCCESS';\r\nexport const GET_FOLDERS_FAIL = 'GET_FOLDERS_FAIL';","import * as actionTypes from '../actionTypes';\r\nimport { updateObject } from '../../util/utility';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: '',\r\n    status: '',\r\n    statusText: '',\r\n    id: '',\r\n    data: []\r\n};\r\n\r\nconst getMacheteStart = ( state ) => {\r\n    return updateObject( state, {\r\n        loading: true\r\n    } );\r\n};\r\n\r\nconst getMacheteSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        loading: false,\r\n        status: action.status,\r\n        statusText: action.statusText,\r\n        id: action.id,\r\n        data: action.data\r\n    } );\r\n};\r\n\r\nconst getMacheteFail = ( state, action ) => {\r\n    return updateObject( state, {\r\n        loading: false,\r\n        error: action.error\r\n    } );\r\n};\r\n\r\nconst getMacheteReducer = (state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.GET_MACHETE_START: return getMacheteStart( state );\r\n        case actionTypes.GET_MACHETE_SUCCESS: return getMacheteSuccess( state, action );\r\n        case actionTypes.GET_MACHETE_FAIL: return getMacheteFail( state, action );\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default getMacheteReducer;\r\n","import * as actionTypes from '../actionTypes';\r\nimport { updateObject } from '../../util/utility';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: '',\r\n    status: '',\r\n    statusText: '',\r\n    id: '',\r\n    data: [],\r\n    nr_folders: 0\r\n};\r\n\r\nconst getFoldersStart = ( state ) => {\r\n    return updateObject( state, {\r\n        loading: true\r\n    } );\r\n};\r\n\r\nconst getFoldersSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        loading: false,\r\n        status: action.status,\r\n        statusText: action.statusText,\r\n        id: action.id,\r\n        data: action.data,\r\n        nr_folders: action.nr_folders\r\n    } );\r\n};\r\n\r\nconst getFoldersFail = ( state, action ) => {\r\n    return updateObject( state, {\r\n        loading: false,\r\n        error: action.error\r\n    } );\r\n};\r\n\r\nconst getFoldersReducer = (state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.GET_FOLDERS_START: return getFoldersStart( state );\r\n        case actionTypes.GET_FOLDERS_SUCCESS: return getFoldersSuccess( state, action );\r\n        case actionTypes.GET_FOLDERS_FAIL: return getFoldersFail( state, action );\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default getFoldersReducer;\r\n","import { useReducer, useCallback } from 'react';\r\nimport axios from '../util/axiosInstance';\r\nimport postFolderReducer from './reducers/postFolderReducer';\r\nimport getMacheteReducer from './reducers/getMacheteReducer';\r\nimport getFoldersReducer from './reducers/getFoldersReducer';\r\n\r\nconst Services = () => {\r\n\r\n    const [postFolderState, dispatchPostFolder] = useReducer(postFolderReducer, {\r\n        loading: false,\r\n        error: '',\r\n        status: '',\r\n        statusText: '',\r\n        id: ''\r\n    });\r\n\r\n    const [getMacheteState, dispatchGetMachete] = useReducer(getMacheteReducer, {\r\n        loading: false,\r\n        error: '',\r\n        status: '',\r\n        statusText: '',\r\n        id: '',\r\n        data: []\r\n    });\r\n\r\n    const [getFoldersState, dispatchGetFolders] = useReducer(getFoldersReducer, {\r\n        loading: false,\r\n        error: '',\r\n        status: '',\r\n        statusText: '',\r\n        id: '',\r\n        data: [],\r\n        nr_folders: 0\r\n    });\r\n\r\n    const postFolder = useCallback((jsonData) => {\r\n        dispatchPostFolder({ type: 'POST_FOLDER_START' });\r\n        const requestHeader = {\r\n            headers: {\r\n                'Auth': 'AIzaSyDAlC_hhvEQArrmVeJGMhVTzKbt7V4rjao',\r\n                'content-type': 'application/x-www-form-urlencoded'\r\n            }\r\n        };\r\n        axios\r\n            .post('https://docgen-electron.firebaseio.com/FolderStructure/2019.json',\r\n                JSON.stringify(jsonData),\r\n                requestHeader\r\n            )\r\n            .then(response => {\r\n                dispatchPostFolder({\r\n                    type: 'POST_FOLDER_SUCCESS',\r\n                    status: response.status,\r\n                    statusText: response.statusText,\r\n                    id: response.data.name\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatchPostFolder({\r\n                    type: 'POST_FOLDER_FAIL',\r\n                    error: error\r\n                });\r\n            });\r\n    }, []);\r\n\r\n    const getMachete = useCallback(() => {\r\n        dispatchGetMachete({ type: 'GET_MACHETE_START' });\r\n        const requestHeader = {\r\n            headers: {\r\n                'Auth': 'AIzaSyDAlC_hhvEQArrmVeJGMhVTzKbt7V4rjao',\r\n                'content-type': 'application/x-www-form-urlencoded'\r\n            }\r\n        };\r\n        axios\r\n            .get('https://docgen-electron.firebaseio.com/Machete.json',\r\n                requestHeader\r\n            )\r\n            .then(response => {\r\n                dispatchGetMachete({\r\n                    type: 'GET_MACHETE_SUCCESS',\r\n                    status: response.status,\r\n                    statusText: response.statusText,\r\n                    id: Object.keys(response.data)[0],\r\n                    data: response.data[Object.keys(response.data)[0]]\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatchGetMachete({\r\n                    type: 'GET_MACHETE_FAIL',\r\n                    error: error\r\n                });\r\n            });\r\n    }, []);\r\n\r\n    const getFolders = () => {\r\n        dispatchGetFolders({ type: 'GET_FOLDERS_START' });\r\n        const requestHeader = {\r\n            headers: {\r\n                'Auth': 'AIzaSyDAlC_hhvEQArrmVeJGMhVTzKbt7V4rjao',\r\n                'content-type': 'application/x-www-form-urlencoded'\r\n            }\r\n        };\r\n        axios\r\n            .get('https://docgen-electron.firebaseio.com/FolderStructure/2019.json',\r\n                requestHeader\r\n            )\r\n            .then(response => {\r\n                dispatchGetFolders({\r\n                    type: 'GET_FOLDERS_SUCCESS',\r\n                    status: response.status,\r\n                    statusText: response.statusText,\r\n                    id: Object.keys(response.data),\r\n                    data: Object.keys(response.data).map(k=> { return response.data[k][0] }),\r\n                    nr_folders: Object.keys(response.data).map(k=> { return response.data[k][0] }).length\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatchGetFolders({\r\n                    type: 'GET_FOLDERS_FAIL',\r\n                    error: error\r\n                });\r\n            });\r\n    };\r\n\r\n    return {\r\n        postFolder: postFolder,\r\n        postFolderState: postFolderState,\r\n\r\n        getMachete: getMachete,\r\n        getMacheteState: getMacheteState,\r\n\r\n        getFolders: getFolders,\r\n        getFoldersState: getFoldersState\r\n    };\r\n};\r\n\r\nexport default Services;","import React, { useState, useContext, useEffect } from 'react';\r\nimport './Machete.scss';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport { GlobalContext } from '../ContextAPI';\r\nimport {\r\n    Button,\r\n    TextInput,\r\n    FormGroup,\r\n    Checkbox\r\n} from \"carbon-components-react\";\r\nimport CheckboxTree from 'react-checkbox-tree';\r\nimport {\r\n    useToasts\r\n} from 'react-toast-notifications';\r\nimport {\r\n    ChevronRight20,\r\n    ChevronDown20,\r\n    Checkbox20,\r\n    CheckboxChecked20,\r\n    CheckboxCheckedFilled20,\r\n    Folder20,\r\n    FolderDetails20,\r\n    Document20,\r\n    AddAlt20,\r\n    SubtractAlt20\r\n} from \"@carbon/icons-react\";\r\nimport createFolderStructure from '../../services/createFolderStructure';\r\nimport services from '../../services'\r\n\r\nconst Machete = () => {\r\n\r\n    const {\r\n        postFolder,\r\n        postFolderState,\r\n        getMachete,\r\n        getMacheteState,\r\n    } = services();\r\n\r\n    const { addToast } = useToasts();\r\n    let globalContext = useContext(GlobalContext);\r\n\r\n    const [dosarNR, setDosarNR] = useState(globalContext.data.nr_folders+1);\r\n\r\n    const [checkedItems, setCheckedItems] = useState([]);\r\n\r\n    const [jsonTreeResult, setJsonTreeResult] = useState( [{\r\n        value: `${dosarNR}parent`,\r\n        type: 'folder',\r\n        label: `Ds. ${dosarNR} din 2019 (${globalContext.data.nume_creditor} vs. ${globalContext.data.nume_debitor})`,\r\n        children: []\r\n    }]);\r\n\r\n    useEffect( () => {\r\n        getMachete();\r\n    },[]);\r\n\r\n    const [treeStateMachete, setTreeStateMachete] = useState({\r\n        checked: [],\r\n        expanded: []\r\n    });\r\n\r\n    const [treeStateResult, setTreeStateResult] = useState({\r\n        checked: [],\r\n        expanded: [`${dosarNR}parent`],\r\n    });\r\n\r\n    useEffect( () => {\r\n        if (getMacheteState.data.length > 0) {\r\n            setTreeStateMachete({\r\n                ...treeStateMachete,\r\n                ...{\r\n                    checked: [...getMacheteState.data[0].children, ...getMacheteState.data[1].children]\r\n                        .filter(n => n.checked === true).map(k=>k.label),\r\n                    expanded: getMacheteState.data.map(k => {return k.expanded===true? k.value : \"\"} )\r\n                }\r\n            })\r\n        }\r\n    },[getMacheteState]);\r\n\r\n    useEffect( () => {\r\n        if (getMacheteState.data.length > 0) {\r\n            setJsonTreeResult([\r\n                {\r\n                    ...[...jsonTreeResult][0],\r\n                    children: [...treeStateMachete.checked.map(k => {\r\n                                return {\r\n                                    value: dosarNR+k,\r\n                                    type: [...getMacheteState.data[0].children, ...getMacheteState.data[1].children]\r\n                                        .find(n => n.value === k).type,\r\n                                    label: [...getMacheteState.data[0].children, ...getMacheteState.data[1].children]\r\n                                        .find(n => n.value === k).label\r\n                                }\r\n                            })]\r\n                }\r\n            ]);\r\n        }\r\n    },[treeStateMachete]);\r\n\r\n\r\n    const updateTreeStateMacheteChecked = (values) => {\r\n        setTreeStateMachete({\r\n            ...treeStateMachete,\r\n            checked: values\r\n        });\r\n    };\r\n\r\n    const updateTreeStateMacheteExpanded = (values) => {\r\n        setTreeStateMachete({\r\n            ...treeStateMachete,\r\n            expanded: values\r\n        });\r\n    };\r\n\r\n    const updateTreeStateResultChecked = (values) => {\r\n        setTreeStateResult({\r\n            ...treeStateResult,\r\n            checked: values\r\n        });\r\n    };\r\n\r\n    const updateTreeStateResultExpanded = (values) => {\r\n        setTreeStateResult({\r\n            ...treeStateResult,\r\n            expanded: values\r\n        });\r\n    };\r\n\r\n    const handleBackBtn = () => {\r\n        globalContext.updateDetails({\r\n            step: 1\r\n        });\r\n    };\r\n\r\n    const handleMijloaceDeExecutie = event => {\r\n        // debugger;\r\n        // setCheckedItems({\r\n        //     ...checkedItems,\r\n        //     [event.target.name]: event.target.checked\r\n        // });\r\n        // console.log(\"checkedItems: \", checkedItems);\r\n    };\r\n\r\n    const createFolderStructureHandler = () => {\r\n        postFolder(jsonTreeResult);\r\n    };\r\n\r\n    // console.log(`globalContext=${globalContext.data.nr_folders}`);\r\n    // console.log(`dosarNR=${dosarNR}`);\r\n\r\n    useEffect( () => {\r\n        if (postFolderState.loading === false &&\r\n                postFolderState.status === 200 &&\r\n                    postFolderState.statusText ===\"OK\"\r\n        ) {\r\n            const { dialog } = require('electron').remote;\r\n            let outputPath = dialog.showOpenDialog({ properties: ['openDirectory'] });\r\n            if (outputPath !== undefined) {\r\n                createFolderStructure(jsonTreeResult, globalContext.data, (outputPath === undefined? \"defaultPath\" : outputPath[0]) );\r\n                addToast('Structura a fost salvata in baza si exportata cu success!', { appearance: 'success' })\r\n            } else {\r\n                addToast('Structura a fost salvata in baza!', { appearance: 'success' });\r\n                addToast('Alege te rog o cale valida pentru a exporta structura.', { appearance: 'warning' });\r\n            }\r\n            setDosarNR(dosarNR+1);\r\n            // globalContext.updateDetails({nr_folders: globalContext.data.nr_folders+1 });\r\n            // updateTreeStateResultExpanded();\r\n        }\r\n\r\n        if (postFolderState.error.length>0) {\r\n            addToast(postFolderState.error, { appearance: 'error' });\r\n        }\r\n\r\n    },[postFolderState]);\r\n\r\n    useEffect( () => {\r\n        setJsonTreeResult(jsonTreeResult);\r\n    },[setDosarNR]);\r\n\r\n    return (\r\n        <div className=\"bx--row machete\">\r\n            <div className=\"bx--col-lg-7 bx--col-sm-4\">\r\n                <div className=\"bx--row-lg-16 bx--row-sm-4\">\r\n                    <div className=\"bx--col-lg-16 bx--col-sm-4 titlu-executoriu\">\r\n                        <TextInput\r\n                            className=\"\"\r\n                            defaultValue={globalContext.data.titlu_executoriu}\r\n                            disabled={false}\r\n                            helperText=\"\"\r\n                            id=\"textinput1\"\r\n                            invalid={false}\r\n                            invalidText=\"\"\r\n                            labelText=\"Titlu Executoriu:\"\r\n                            light={false}\r\n                            name=\"textinput1\"\r\n                            placeholder=\"Ex: Sentinta Civila nr. 321/01.09.2018, pronuntata de Judecatoria Zimnicea\"\r\n                            type=\"text\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"bx--col-lg-16 bx--col-sm-4 debit\">\r\n                        <TextInput\r\n                            className=\"\"\r\n                            defaultValue={globalContext.data.debit}\r\n                            disabled={false}\r\n                            helperText=\"\"\r\n                            id=\"textinput2\"\r\n                            invalid={false}\r\n                            invalidText=\"\"\r\n                            labelText=\"Debit:\"\r\n                            light={false}\r\n                            name=\"textinput2\"\r\n                            placeholder=\"Ex: 12345\"\r\n                            type=\"text\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"bx--col-lg-16 bx--col-sm-4 check-box-tree-machete\">\r\n                        <h4> Machetele disponibile: </h4>\r\n                        <CheckboxTree\r\n                            nodes={getMacheteState.data}\r\n                            checked={treeStateMachete.checked}\r\n                            expanded={treeStateMachete.expanded}\r\n                            onCheck={(checked) => updateTreeStateMacheteChecked(checked)}\r\n                            onExpand={(expanded) => updateTreeStateMacheteExpanded(expanded)}\r\n                            icons={{\r\n                                check: <CheckboxCheckedFilled20 />,\r\n                                uncheck: <Checkbox20 />,\r\n                                halfCheck:  <CheckboxChecked20 />,\r\n                                expandClose: <ChevronRight20 />,\r\n                                expandOpen: <ChevronDown20 />,\r\n                                expandAll: <AddAlt20 />,\r\n                                collapseAll: <SubtractAlt20 />,\r\n                                parentClose: <Folder20 />,\r\n                                parentOpen: <FolderDetails20 />,\r\n                                leaf: <Document20 />,\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"bx--col-lg-9 bx--col-sm-4\">\r\n                <div className=\"bx--row-lg-16 bx--row-sm-4\">\r\n                    <div className=\"bx--col-lg-16 bx--col-sm-4 mijloace-de-executie\">\r\n                        <div className=\"bx--col-lg-5 bx--col-sm-1\">\r\n                            <FormGroup\r\n                                className=\"executare-indirecta\"\r\n                                invalid={false}\r\n                                legendText=\"Executare indirectă\"\r\n                                message={false}\r\n                                messageText=\"\"\r\n                            >\r\n                                <Checkbox\r\n                                    className=\"executare-indirecta-ckbox\"\r\n                                    name=\"Poprire\"\r\n                                    id=\"checkbox-0\"\r\n                                    indeterminate={false}\r\n                                    labelText=\"Poprire\"\r\n                                    checked={checkedItems[\"Mobiliară\"]}\r\n                                    onChange={handleMijloaceDeExecutie}\r\n                                />\r\n                                <Checkbox\r\n                                    className=\"executare-indirecta-ckbox\"\r\n                                    id=\"checkbox-1\"\r\n                                    indeterminate={false}\r\n                                    labelText=\"Mobiliară\"\r\n                                    checked={checkedItems[\"Mobiliară\"]}\r\n                                    onChange={handleMijloaceDeExecutie}\r\n                                />\r\n                                <Checkbox\r\n                                    className=\"executare-indirecta-ckbox\"\r\n                                    id=\"checkbox-2\"\r\n                                    indeterminate={false}\r\n                                    labelText=\"Imobiliară\"\r\n                                    checked={checkedItems[\"Imobiliară\"]}\r\n                                    onChange={handleMijloaceDeExecutie}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"bx--col-lg-5 bx--col-sm-1\">\r\n                            <FormGroup\r\n                                className=\"executare-directa\"\r\n                                invalid={false}\r\n                                legendText=\"Executare directă\"\r\n                                message={false}\r\n                                messageText=\"\"\r\n                            >\r\n                                <Checkbox\r\n                                    className=\"executare-directa-ckbox\"\r\n                                    id=\"checkbox-3\"\r\n                                    indeterminate={false}\r\n                                    labelText=\"Predare mobiliară\"\r\n                                    checked={checkedItems[\"Predare mobiliară\"]}\r\n                                    onChange={handleMijloaceDeExecutie}\r\n                                />\r\n                                <Checkbox\r\n                                    className=\"executare-directa-ckbox\"\r\n                                    id=\"checkbox-4\"\r\n                                    indeterminate={false}\r\n                                    labelText=\"Predare imobiliară\"\r\n                                    checked={checkedItems[\"Predare imobiliară\"]}\r\n                                    onChange={handleMijloaceDeExecutie}\r\n                                />\r\n                                <Checkbox\r\n                                    className=\"executare-directa-ckbox\"\r\n                                    id=\"checkbox-5\"\r\n                                    indeterminate={false}\r\n                                    labelText=\"Obligația de a face\"\r\n                                    checked={checkedItems[\"Obligația de a face\"]}\r\n                                    onChange={handleMijloaceDeExecutie}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"bx--col-lg-6 bx--col-sm-2\">\r\n                            <FormGroup\r\n                                className=\"alte-tipuri-de-executare\"\r\n                                invalid={false}\r\n                                legendText=\"Alte tipuri de executare\"\r\n                                message={false}\r\n                                messageText=\"\"\r\n                            >\r\n                                <Checkbox\r\n                                    className=\"some-class\"\r\n                                    id=\"checkbox-6\"\r\n                                    indeterminate={false}\r\n                                    labelText=\"Recuperare pe cale amiabilă\"\r\n                                    checked={checkedItems[\"Recuperare pe cale amiabilă\"]}\r\n                                    onChange={handleMijloaceDeExecutie}\r\n                                />\r\n                                <Checkbox\r\n                                    className=\"some-class\"\r\n                                    id=\"checkbox-7\"\r\n                                    indeterminate={false}\r\n                                    labelText=\"Ofertă reală de plată\"\r\n                                    checked={checkedItems[\"Ofertă reală de plată\"]}\r\n                                    onChange={handleMijloaceDeExecutie}\r\n                                />\r\n                                <Checkbox\r\n                                    className=\"some-class\"\r\n                                    id=\"checkbox-8\"\r\n                                    indeterminate={false}\r\n                                    labelText=\"Constatarea unei stări de fapt\"\r\n                                    checked={checkedItems[\"Constatarea unei stări de fapt\"]}\r\n                                    onChange={handleMijloaceDeExecutie}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bx--col-lg-16 bx--col-sm-4 check-box-tree-result\">\r\n                        <h4> Structura de fisiere si directoare generata in functie de machetele alese: </h4>\r\n                        <CheckboxTree\r\n                            nodes={jsonTreeResult}\r\n                            checked={treeStateResult.checked}\r\n                            expanded={treeStateResult.expanded}\r\n                            onCheck={(checked) => updateTreeStateResultChecked(checked)}\r\n                            onExpand={(expanded) => updateTreeStateResultExpanded(expanded)}\r\n                            icons={{\r\n                                check: <CheckboxCheckedFilled20 />,\r\n                                uncheck: <Checkbox20 />,\r\n                                halfCheck:  <CheckboxChecked20 />,\r\n                                expandClose: <ChevronRight20 />,\r\n                                expandOpen: <ChevronDown20 />,\r\n                                expandAll: <AddAlt20 />,\r\n                                collapseAll: <SubtractAlt20 />,\r\n                                parentClose: <Folder20 />,\r\n                                parentOpen: <FolderDetails20 />,\r\n                                leaf: <Document20 />,\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"bx--row btn-row\">\r\n                <div className=\"bx--col-lg-8 bx--col-sm-2\">\r\n                    <Button\r\n                        className=\"btn-back\"\r\n                        disabled={false}\r\n                        kind=\"primary\"\r\n                        onClick={handleBackBtn}\r\n                        tabIndex={0}\r\n                        type=\"submit\"\r\n                    >\r\n                        Pasul Precedent\r\n                    </Button>\r\n                </div>\r\n                <div className=\"bx--col-lg-8 bx--col-sm-2\">\r\n                    <Button\r\n                        className=\"btn-next\"\r\n                        disabled={false}\r\n                        kind=\"primary\"\r\n                        onClick={createFolderStructureHandler}\r\n                        tabIndex={0}\r\n                        type=\"submit\"\r\n                    >\r\n                        Salveaza si Creaza structura Local\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Machete;\r\n","import React, {useContext} from 'react';\r\nimport './GenerareDosar.scss';\r\nimport { GlobalContext } from \"../ContextAPI\";\r\nimport ProgressBar from \"../ProgressBar\";\r\nimport Creditor from \"../Creditor\";\r\nimport Debitor from \"../Debitor\";\r\nimport Machete from \"../Machete\";\r\n\r\nconst GenerareDosar = props => {\r\n\r\n    const globalContext = useContext(GlobalContext);\r\n\r\n    return (\r\n        <>\r\n            <ProgressBar />\r\n            <hr />\r\n            {globalContext.data[\"step\"] === 0?\r\n                <Creditor />\r\n                : globalContext.data[\"step\"] === 1?\r\n                    <Debitor />\r\n                    : globalContext.data[\"step\"] === 2?\r\n                        <Machete/>\r\n                        : <></>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GenerareDosar;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport './Dosare.scss';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport { GlobalContext } from '../ContextAPI';\r\nimport {\r\n    FormGroup,\r\n    Checkbox\r\n} from \"carbon-components-react\";\r\nimport CheckboxTree from 'react-checkbox-tree';\r\nimport {\r\n    useToasts\r\n} from 'react-toast-notifications';\r\nimport {\r\n    ChevronRight20,\r\n    ChevronDown20,\r\n    Checkbox20,\r\n    CheckboxChecked20,\r\n    CheckboxCheckedFilled20,\r\n    Folder20,\r\n    FolderDetails20,\r\n    Document20,\r\n    AddAlt20,\r\n    SubtractAlt20\r\n} from \"@carbon/icons-react\";\r\nimport services from '../../services'\r\n// import useWindowSize from './../../util/useWindowSize';\r\n\r\nconst Dosare = () => {\r\n\r\n    const globalContext = useContext(GlobalContext);\r\n\r\n    const {\r\n        getFolders,\r\n        getFoldersState\r\n    } = services();\r\n\r\n    useEffect( () => {\r\n        getFolders();\r\n    },[]);\r\n\r\n    const [treeState, setTreeState] = useState({\r\n        checked: [],\r\n        expanded: [],\r\n    });\r\n\r\n    const updateTreeStateResultChecked = (values) => {\r\n        setTreeState({\r\n            ...treeState,\r\n            checked: values\r\n        });\r\n    };\r\n\r\n    const updateTreeStateResultExpanded = (values) => {\r\n        setTreeState({\r\n            ...treeState,\r\n            expanded: values\r\n        });\r\n    };\r\n\r\n    useEffect( () => {\r\n        if (getFoldersState.loading === false &&\r\n                getFoldersState.status === 200 &&\r\n                    getFoldersState.statusText ===\"OK\") {\r\n            globalContext.updateDetails({nr_folders: getFoldersState.nr_folders });\r\n        }\r\n    },[getFoldersState]);\r\n\r\n    return (\r\n        <div className=\"bx--row dosare\">\r\n            <div className=\"bx--col-lg-7 bx--col-sm-4\">\r\n                <div className=\"bx--col-lg-16 bx--col-sm-4 check-box-tree\">\r\n                    <h4> Structura de fisiere si directoare din 2019: </h4>\r\n                    <CheckboxTree\r\n                        nodes={getFoldersState.data}\r\n                        checked={treeState.checked}\r\n                        expanded={treeState.expanded}\r\n                        onCheck={(checked) => updateTreeStateResultChecked(checked)}\r\n                        onExpand={(expanded) => updateTreeStateResultExpanded(expanded)}\r\n                        icons={{\r\n                            check: <CheckboxCheckedFilled20 />,\r\n                            uncheck: <Checkbox20 />,\r\n                            halfCheck:  <CheckboxChecked20 />,\r\n                            expandClose: <ChevronRight20 />,\r\n                            expandOpen: <ChevronDown20 />,\r\n                            expandAll: <AddAlt20 />,\r\n                            collapseAll: <SubtractAlt20 />,\r\n                            parentClose: <Folder20 />,\r\n                            parentOpen: <FolderDetails20 />,\r\n                            leaf: <Document20 />,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"bx--col-lg-9 bx--col-sm-4\">\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dosare;\r\n","import React from 'react';\r\nimport './Documentatie.scss';\r\n\r\nconst Documentatie = () => {\r\n\r\n    return (\r\n        <>\r\n            Documentatie\r\n            - Faza 1\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Documentatie;\r\n","import React, { useState } from 'react';\r\nimport {\r\n    ContentSwitcher,\r\n    Switch\r\n} from 'carbon-components-react';\r\nimport './AppContent.scss';\r\nimport GenerareDosar from '../GenerareDosar';\r\nimport Dosare from \"../Dosare\";\r\nimport Documentatie from \"../Documentatie\";\r\n\r\nconst AppContent = () => {\r\n\r\n    const [contentSwitch, setContentSwitch] = useState([\r\n        {\r\n            id: 'first',\r\n            display: false,\r\n            progressBarCurrentIndex: 0\r\n        },\r\n        {\r\n            id: 'second',\r\n            display: true\r\n        },\r\n        {\r\n            id: 'third',\r\n            display: false\r\n        }\r\n    ]);\r\n\r\n    const toggleContentSwitcher = event => {\r\n        let state = [...contentSwitch];\r\n        state.find(k=>k.id===event.name).display = true;\r\n        state.filter(k=>k.id!==event.name).forEach(n=>n.display = false);\r\n        setContentSwitch(state);\r\n    };\r\n\r\n    return (\r\n        <div className=\"bx--grid bx--grid--full-width appContent\">\r\n            <div className=\"bx--row\">\r\n                <ContentSwitcher\r\n                    onChange={(event) => toggleContentSwitcher(event)}\r\n                    selectedIndex={1}\r\n                >\r\n                    <Switch\r\n                        name=\"first\"\r\n                        className=\"generare-dosar\"\r\n                        text=\"Generare Dosar\"\r\n                    />\r\n                    <Switch\r\n                        name=\"second\"\r\n                        className=\"dosare\"\r\n                        text=\"Dosare\"\r\n                    />\r\n                    <Switch\r\n                        name=\"third\"\r\n                        className=\"documentatie\"\r\n                        text=\"Documentatie\"\r\n                    />\r\n                </ContentSwitcher>\r\n            </div>\r\n            {contentSwitch[0].display?\r\n                <GenerareDosar\r\n                    progressBarCurrentIndex={contentSwitch[0].progressBarCurrentIndex}\r\n                />\r\n                    : contentSwitch[1].display?\r\n                    <Dosare/>\r\n                        : contentSwitch[2].display?\r\n                        <Documentatie/>\r\n                        : <></>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppContent;","// TODO : fix the IE11 pollyfils, there is some error here\r\n// import 'core-js/modules/es7.array.includes';\r\n// import 'core-js/modules/es6.array.fill';\r\n// import 'core-js/modules/es6.string.includes';\r\n// import 'core-js/modules/es6.string.trim';\r\n// import 'core-js/modules/es7.object.values';\r\n\r\nimport React from 'react';\r\nimport './App.scss';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport ContextAPI from \"./components/ContextAPI\";\r\nimport AppHeader from './components/AppHeader';\r\nimport AppContent from './components/AppContent';\r\nimport { ToastProvider } from \"react-toast-notifications\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router>\r\n            <ContextAPI>\r\n                <AppHeader />\r\n                <ToastProvider\r\n                    autoDismiss='true'\r\n                    autoDismissTimeout='3000'\r\n                    placement='bottom-center'\r\n                >\r\n                    <AppContent />\r\n                </ToastProvider>\r\n            </ContextAPI>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = require(\"electron\");"],"sourceRoot":""}